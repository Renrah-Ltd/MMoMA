{"version":3,"file":"component---src-pages-404-js-03bcd2434a2283349a9f.js","mappings":"6LA8BA,MA1BeA,IAAA,IAAC,UAAEC,GAAWD,EAAA,OAC3BE,EAAAA,cAAA,UACEC,UAAU,UAEVD,EAAAA,cAACE,EAAAA,KAAI,CACHC,GAAG,IACHC,MAAO,CACLC,SAAU,iBACVC,eAAgB,SAGjBP,GAEHC,EAAAA,cAACE,EAAAA,KAAI,CACLD,UAAU,0BACRE,GAAG,aACHC,MAAO,CACLC,SAAU,iBACVC,eAAgB,SAEnB,aAGM,E,QCyBX,MAvCeR,IAA8B,IAADS,EAAA,IAA5B,SAAEC,EAAQ,UAAEP,GAAWH,EACrC,MAAMW,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACEV,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACW,EAAM,CAACZ,WAAiC,QAAtBQ,EAAAE,EAAKG,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBO,QAAS,UACpDd,EAAAA,cAAA,OACEC,UAAWA,GAEXD,EAAAA,cAAA,YAAOQ,GACPR,EAAAA,cAAA,UACAC,UAAU,SACRG,MAAO,CACLW,UAAW,iBACXV,SAAU,iBACVW,UAAW,SACXC,WAAY,eACZC,MAAO,iBAGTlB,EAAAA,cAAA,SAAG,MACE,IAAImB,MAAOC,cAAc,qCAG9BpB,EAAAA,cAAA,aAAO,uEAGV,C,+CCJP,IAlCA,SAAYF,GAAoC,IAADuB,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAET,EAAK,SAAEN,GAAUV,EAC3C,MAAM,KAAEc,IAASF,EAAAA,EAAAA,gBAAe,YAc1Bc,EAAkBD,GAAeX,EAAKC,aAAaU,YACnDE,EAAgC,QAApBJ,EAAGT,EAAKC,oBAAY,IAAAQ,OAAA,EAAjBA,EAAmBP,MAExC,OACEd,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQyB,EAAe,GAAGX,OAAWW,IAAiBX,GACtDd,EAAAA,cAAA,QAAM0B,KAAK,cAAcC,QAASH,IAClCxB,EAAAA,cAAA,QAAM4B,SAAS,WAAWD,QAASb,IACnCd,EAAAA,cAAA,QAAM4B,SAAS,iBAAiBD,QAASH,IACzCxB,EAAAA,cAAA,QAAM4B,SAAS,UAAUD,QAAQ,YACjC3B,EAAAA,cAAA,QAAM0B,KAAK,eAAeC,QAAQ,YAClC3B,EAAAA,cAAA,QAAM0B,KAAK,kBAAkBC,SAA0B,QAAjBL,EAAAV,EAAKC,oBAAY,IAAAS,OAAA,EAAjBA,EAAmBO,SAAU,KACnE7B,EAAAA,cAAA,QAAM0B,KAAK,gBAAgBC,QAASb,IACpCd,EAAAA,cAAA,QAAM0B,KAAK,sBAAsBC,QAASH,IACzChB,EAGP,C,mGCrCA,MAOasB,EAAOA,IAAM9B,EAAAA,cAAC+B,EAAAA,EAAG,CAACjB,MAAM,mBAErC,UATqBkB,IACnBhC,EAAAA,cAACiC,EAAAA,EAAM,KACLjC,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2D","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport SearchBar from \"./SearchBar\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    className=\"header\"\n  >\n    <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      {siteTitle}\n    </Link>\n    <Link\n    className=\"button gift-shop-button\"\n      to=\"/gift-shop\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      Gift Shop\n    </Link>\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Seo from \"./seo\"\n\nconst Layout = ({ children, className }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        className={className}\n      >\n        <main>{children}</main>\n        <footer\n        className=\"footer\"\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n            textAlign: 'center',\n            background: \"var(--black)\",\n            color: \"var(--white)\"\n          }}\n        >\n          <p>\n            Â© {new Date().getFullYear()} &middot; Built with\n            ðŸ’œ by JackJackSlaps\n          </p>\n          <small>All Images, Names, and whatever else belong to whoever owns them.</small>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n"],"names":["_ref","siteTitle","React","className","Link","to","style","fontSize","textDecoration","_data$site$siteMetada","children","data","useStaticQuery","Header","site","siteMetadata","title","marginTop","textAlign","background","color","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author","Head","Seo","NotFoundPage","Layout"],"sourceRoot":""}