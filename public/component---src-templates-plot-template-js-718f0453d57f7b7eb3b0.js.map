{"version":3,"file":"component---src-templates-plot-template-js-718f0453d57f7b7eb3b0.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/images/gift-shop-map.png","webpack://gatsby-starter-default/./src/templates/plotTemplate.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport SearchBar from \"./SearchBar\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    className=\"header\"\n  >\n    <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      {siteTitle}\n    </Link>\n    <Link\n    className=\"button gift-shop-button\"\n      to=\"/gift-shop\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      Gift Shop\n    </Link>\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Seo from \"./seo\"\n\nconst Layout = ({ children, className }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        className={className}\n      >\n        <main>{children}</main>\n        <footer\n        className=\"footer\"\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n            textAlign: 'center',\n            background: \"var(--black)\",\n            color: \"var(--white)\"\n          }}\n        >\n          <p>\n            Â© {new Date().getFullYear()} &middot; Built with\n            ðŸ’œ by JackJackSlaps\n          </p>\n          <small>All Images, Names, and whatever else belong to whoever owns them.</small>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","export default __webpack_public_path__ + \"static/gift-shop-map-967e74e11e73eb0f06cf9dcb0f3442d1.png\";","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport \"../styles/main.scss\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Map from \"../components/map\"\nimport mapImage from \"../images/gift-shop-map.png\"\n\nconst PlotTemplate = ({ data, pageContext }) => {\n    const { plot } = pageContext\n\n    const centerX = (plot.start_coords.x + plot.end_coords.x) / 2\n    const centerZ = (plot.start_coords.z + plot.end_coords.z) / 2\n\n    const mapURL = `https://homesteadcraft.mcserver.us:8123/#homesteadcraft:${centerX}:76:${centerZ}:48:0:0:1:1:flat`\n    const plotName = plot.shopName ? plot.shopName : `Plot #${plot.plotNumber}`\n    return (\n        <Layout className=\"plot\">\n          <Seo title={plotName} />\n            <div class=\"grid grid--2 grid--mobile-1\">\n               <img src={mapImage} />\n                <div className=\"plot-info\">\n                    <div className=\"plot-title\">\n                        <h1>Check out the MMoMA Gift Shop</h1>\n                        <div class=\"inline\">\n                       <p>Owner: {plot.owner}</p>\n                        </div>\n                    </div>\n                    <h2>Items for Sale:</h2>\n                    <div className=\"items-grid\">\n                        <div className=\"th\">You Give</div><div className=\"th\">You Get</div>\n                        {plot.itemsForSale && plot.itemsForSale.map((item, index) => {\n                            console.log({ item });\n                            const itemEntity = item.item?.entityID?.replace('minecraft:', '')\n                            const itemIcon = item.icon ? `/icons/${item.icon.replace('minecraft:','')}.png` : `/icons/${itemEntity}.png`\n                            console.log({itemEntity, itemIcon})\n                            return (\n                                <div className=\"trade\">\n                                    {item.for ? <div className=\"item item--for\">{item.forQty} x <img className=\"item-icon\" src={`/icons/${item.forIcon ? item.forIcon.replace('minecraft:', '') : item.for.entityID.replace('minecraft:', '')}.png`} /> {item.for.name}</div> : <div className=\"item item--for\">?</div>}\n                                    <div className=\"item item--get\">{item.qty || '?'} x <img className=\"item-icon\" src={itemIcon} /> {item.item?.name || item.item}  {item.note && <div className=\"item-note\">{item.note}</div>}\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n  query ($plotNumber: Int!) {\n  plotsJson(plotNumber: {eq: $plotNumber}) {\n    plotNumber\n    shopName\n    owner\n    start_coords {\n      x\n      z\n    }\n    end_coords {\n      x\n      z\n    }\n    itemsForSale {\n      item\n      icon\n      for\n      qty\n      forQty\n      note\n    }\n  }\n}\n`\n\nexport default PlotTemplate\n"],"names":["_ref","siteTitle","React","className","Link","to","style","fontSize","textDecoration","_data$site$siteMetada","children","data","useStaticQuery","Header","site","siteMetadata","title","marginTop","textAlign","background","color","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author","pageContext","plot","plotName","start_coords","x","end_coords","z","shopName","plotNumber","Layout","Seo","class","src","mapImage","owner","itemsForSale","map","item","index","_item$item","_item$item$entityID","_item$item2","console","log","itemEntity","entityID","replace","itemIcon","icon","for","forQty","forIcon","qty","note"],"sourceRoot":""}