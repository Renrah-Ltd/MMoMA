{"version":3,"file":"component---src-pages-using-typescript-tsx-3c939fbd5c5e8aa5ca28.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport SearchBar from \"./SearchBar\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    className=\"header\"\n  >\n    <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      {siteTitle}\n    </Link>\n    <Link\n    className=\"button gift-shop-button\"\n      to=\"/gift-shop\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      Gift Shop\n    </Link>\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Seo from \"./seo\"\n\nconst Layout = ({ children, className }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        className={className}\n      >\n        <main>{children}</main>\n        <footer\n        className=\"footer\"\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n            textAlign: 'center',\n            background: \"var(--black)\",\n            color: \"var(--white)\"\n          }}\n        >\n          <p>\n            Â© {new Date().getFullYear()} &middot; Built with\n            ðŸ’œ by JackJackSlaps\n          </p>\n          <small>All Images, Names, and whatever else belong to whoever owns them.</small>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","siteTitle","className","style","fontSize","textDecoration","_data$site$siteMetada","children","useStaticQuery","Header","siteMetadata","marginTop","textAlign","background","color","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}